azucar sintatico, es decir una forma de escribir clases(prototipos) mas facilmente
escribir de una forma mas sencilla los prototipos
---------------------------------------------------------------------------------------
//Funcion constructora de clases
class Animal{ //las clases no reciben propiedades
    constructor(nombre, genero){//este recibe las propiedades en vez de la clase
        //asignacion de las propiedades
        this.nombre = nombre
        this.genero = genero
    }

    //como se definen los metodos(funciones) en una clase?
    sonar(){
        console.log("Soy un gato y mi sonido es un maullido")
    }
    saludar(){
        console.log(`hola me llamo ${this.nombre}`)
    }
    maullar(){
        console.log("Miauuuu Miauuu !!!!")
    }
}
//HERENCIA de clases

class Perro extends Animal{ //extends -> que es lo que recibe la instancia Perro de la instancia Animal??
constructor(nombre, genero,tamanio){
    super(nombre,genero)//se manda a llamar el constructor de la clase padre "Animales"("aqui pasa todos los atributos de clase Animal")
    this.tamanio = tamanio
}
//Sobreescritura de metodos(funciones) del prototipo padre en el hijo
sonar(){
    console.log("Soy un perro y mi sonido es un ladrido")
}
//creando un nuevo metodo esclusivo de la instancia perro
ladrar(){
    console.log("Guauuu Guauuuu !!!!!")
}
}
//creando un nuevo metodo esclusivo de la instancia serpiente
class Serpiente extends Animal{
    constructor(nombre, genero, color){
        super(nombre,genero)
        this.color =  color
    }
    sonar(){
        console.log("Soy una serpiente y mi sonido no es muy perseptible")
    }
    sssss(){
        console.log("Ssssssss Sssssss!!!!!")
    }
    color_p(){//NUNCA CONFUNDIR el nombre de la variable con la funcion, una de estas se debe de llarmar diferente
        console.log(`y mi color de piel es ${this.color}`)
    }
}



const gato = new Animal("Giorno","Macho"), gato1 = new Animal("Dian","Hembra"),gato2 = new Animal("Dem","Macho"), perro = new Perro("hector","macho","peque単o"),serpiente = new Serpiente("Slim","Macho","verde oscuro")

console.log(gato)
console.log(gato1)
console.log(gato2)
console.log(perro)
console.log(serpiente)
console.log("----------------------")
gato.saludar()
gato.sonar()
gato.maullar()
console.log("----------------------")
gato1.saludar()
gato1.sonar()
gato1.maullar()
console.log("----------------------")
gato2.saludar()
gato2.sonar()
gato2.maullar()
console.log("----------------------")
perro.saludar()
perro.sonar()
perro.ladrar()
console.log("----------------------")
serpiente.saludar()
serpiente.sonar()
serpiente.sssss()
serpiente.color_p()
-------
ejercicio propio

class Vehiculo{
    constructor(tipo,tamanio){
        this.tipo = tipo
        this.tamanio = tamanio
    }
    info(){
        console.log(`El vehiculo \"${this.tipo}\" nos ayuda a llegar mas rapido a nuestro destino`)
    }
    static info_add(){
        console.log("\t \t DIA DEL NACIMIENTO DEL VEHICULO MOTORIZADO\n En el a単o 1886 del dia 22 de enero, Carl Benz patento su \"Vehiculo motorizado con motor de gasolina\" de tre ruedas")
    }
}

class Moto extends Vehiculo{
    constructor(tipo,tamanio,color){
        super(tipo,tamanio,color)
        this.tipo = tipo
        this.tamanio = tamanio
        this.color = color
    }
    info(){
        console.log(`Las motos de la marca \"${this.tipo}\" son muy rapidas `)
    }
    pel(){
        console.log(`Las motos de la marca \"${this.tipo}\"son muy rapaidas PEROOOO!!! son muy peligrosas para gente principiante`)
    }
}

class Auto extends Vehiculo{
    constructor(tipo, tamanio){
        super(tipo,tamanio)
        this.tipo = tipo
        this.tamanio = tamanio
        this.plazas = null
    }
    
    get getPlazas(){
        return this.plazas
    }
    
    set setPlazas(plazas){
        return this.plazas = plazas
    }
}




Vehiculo.info_add()
console.log("-------------------------------------------")


const veh = new Vehiculo("auto","peque単o"),moto = new Moto("susuki","peque単o","gris"), auto = new Auto("Ferrari","mediano","rojo")

console.log(veh)
veh.info()
console.log("-------------------------------------------")
console.log(moto)
moto.info()
moto.pel()
console.log("-------------------------------------------")
console.log(auto)
auto.setPlazas = 2
console.log(auto.getPlazas)
console.log(auto)