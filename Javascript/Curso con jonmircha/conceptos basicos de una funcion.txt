Una function es un bloque de codigo, autocontenido,que se puede definir una vez y ejecuar en cualquier momento. Opcionalmente, una funcion puede aceptar parametros y devolver un valor

las funciones en JavaScript son objetos, un tipo especial de objetos: se dice que las funciones son ciudadanos de primera clase porque pueden asignarse a u valor, y pueden pasarse como argumentos y usarse como un valor de retorno

Funcion declarada
function estoEsUnaFuncion(){
    console.log("Hola")
}
invocacion de Funcion
estoEsUnaFuncion()
-------------------------------------------------
Retonar valores
function estoEsUnaFuncion(){
    console.log("Hola")
    return "Mundo" //despues del return, si tiene mas lineas de codigo se ignoran
}

invocacion de Funcion
let nombreFun = estoEsUnaFuncion() //siempre se asigna a una variable cuado vaya a retorna un valor string o numerico
console.log(nombreFun)
--------------------------------------------------------------
Aceptar parametros
funcion saludar(nombre,edad){
    console.log(`Hola mi nombre es ${nombre} y tengo ${edad} a√±os`)
}

saludar("Eduard",18)
saludar() si no escribimos nada los valores pasan a ser undefined, si queremos cambiar el undefined por otra cosa hacemos lo siguiente
function saludar(nombre = "Desconocido", edad = 0) asi los valores no se declaran estos pasan hacer "Desconocido" y 0
--------------------------------------------------------------
Funcion expresada

const funcionExpresada = function(){
    console.log("Esto es una funcion expresada, es decir, una funccion que se le ha asignado como valor a una variable,si invocamos esta funcion antes de su definicion js nos dira `Cannot access nombre de la funcion before initialization`")
}

funcionExpresada()